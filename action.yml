name: "auto-release"
description: "Automatically draft release notes for your next release as Pull Requests are merged into main. Optionally, automatically publish a release for every Pull Request."
inputs:
  token:
    description: "Standard GitHub token (e.g., secrets.GITHUB_TOKEN)"
    required: false
  publish:
    description: "Whether to publish a new release immediately"
    required: false
    default: true
  prerelease:
    description: "Boolean indicating whether this release should be a prerelease"
    required: false
    default: false

runs:
  using: "composite"
  steps:
    # Checkout current commit in calling repo
    - name: "Checkout commit"
      uses: actions/checkout@v2

    # Get PR from merged commit to master so we can leverage some of the meta data, including labels
    - uses: actions-ecosystem/action-get-merged-pull-request@v1
      id: get-merged-pull-request
      with:
        github_token: ${{ inputs.token }}

    # Get list of all changed files in PR and test whether the PR only contains changes to README.* files
    - name: "Check for changes only being present in README.* files"
      id: file-changes
      shell: bash
      runs: |
        if [[ $(git diff --name-only --diff-filter=ACMRT | grep -c -v "README") == 0 ]]; then
          echo "::set-output name=only-readme::true"
        else
          echo "::set-output name=only-readme::false"
        fi

    # Add the `no-release` label to the PR if the only changes are in README.* files
    - name: "Don't release on README.*-only changes"
      if: steps.file-changes.only-readme
      uses: actions-ecosystem/action-add-labels
      with:
        labels: no-release
        number: ${{ steps.get-merged-pull-request.outputs.number }}

    # Drafts the next Release and compiles the notes as Pull Requests are merged into "main" (unless the `no-release` label is used on the PR)
    - uses: release-drafter/release-drafter@v5.20.0
      with:
        # The following boolean expression may appear complex, but its purpose is to only enable publishing if:
        # 1. inputs.publish is true, or
        # 2. the PR does not have the 'no-release' label and contains changes to files other than README.
        # Due to the dependencies between steps.get-merged-pull-request and steps.file-changes, rearranging action steps
        # is not a viable option to eliminate the use of the && operator, making this compound condition a relatively
        # straightforward solution under the circumstances.
        publish: ${{ inputs.publish || ( !contains(steps.get-merged-pull-request.outputs.labels, 'no-release') && !steps.file-changes.only-readme ) }}
        prerelease: ${{ inputs.prerelease }}
        config-name: auto-release-config.yml
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
